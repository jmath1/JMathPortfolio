name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      ROLE_ARN: arn:aws:iam::471528030347:role/github-runner-role
      AWS_REGION: us-east-1
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Terraform
      run: |
        wget https://releases.hashicorp.com/terraform/0.14.7/terraform_0.14.7_linux_amd64.zip
        unzip terraform_0.14.7_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        rm terraform_0.14.7_linux_amd64.zip
    - name: Set environment variable
      run: |
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
          echo "ENV=prod" >> $GITHUB_ENV
        elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
          echo "ENV=stage" >> $GITHUB_ENV
        fi
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Initialize Terraform
      run: |
        terraform -chdir=_infrastructure/terraform/stacks/registry init -reconfigure -backend-config="key=${{ env.ENV }}/registry.tfstate"


    - name: Login to Docker Registry
      run: |
        registry_url=$(terraform -chdir=_infrastructure/terraform/stacks/registry output -raw registry_url)
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${registry_url}
        docker build --file portfolio/Dockerfile ./portfolio -t ${registry_url}:django
        docker push ${registry_url}:django

    - name: Stop ECS Task so it resets - quick and dirty with some downtime but I'm not setting up blue/green deployments with code deploy right now
      run: |
        aws ecs update-service --cluster jmath-${{ env.ENV }} --service jmath-${{ env.ENV }}-service --desired-count 0
        aws ecs update-service --cluster jmath-${{ env.ENV }} --service jmath-${{ env.ENV }}-service --desired-count 1

    - name: Cleanup
      run: |
        docker logout
